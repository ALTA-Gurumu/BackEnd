// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	autentikasi "Gurumu/features/autentikasi"

	mock "github.com/stretchr/testify/mock"
)

// AutentikasiService is an autogenerated mock type for the AutentikasiService type
type AutentikasiService struct {
	mock.Mock
}

// Login provides a mock function with given fields: email, password
func (_m *AutentikasiService) Login(email string, password string) (string, autentikasi.Core, error) {
	ret := _m.Called(email, password)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string) string); ok {
		r0 = rf(email, password)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 autentikasi.Core
	if rf, ok := ret.Get(1).(func(string, string) autentikasi.Core); ok {
		r1 = rf(email, password)
	} else {
		r1 = ret.Get(1).(autentikasi.Core)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string, string) error); ok {
		r2 = rf(email, password)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

type mockConstructorTestingTNewAutentikasiService interface {
	mock.TestingT
	Cleanup(func())
}

// NewAutentikasiService creates a new instance of AutentikasiService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewAutentikasiService(t mockConstructorTestingTNewAutentikasiService) *AutentikasiService {
	mock := &AutentikasiService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
